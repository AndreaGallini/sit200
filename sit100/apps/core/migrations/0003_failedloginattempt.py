# Generated by Django 5.0.6 on 2025-02-27 08:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.contrib.auth.management import create_permissions


def create_model_permissions(apps, schema_editor):
    # This ensures permissions are created with proper IDs
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_alter_useraccesslog_device'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FailedLoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('attempts_count', models.PositiveIntegerField(default=1)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('last_attempt', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                 related_name='failed_logins', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        # Add this operation to properly handle permission creation
        migrations.RunPython(create_model_permissions,
                             reverse_code=migrations.RunPython.noop),
    ]
